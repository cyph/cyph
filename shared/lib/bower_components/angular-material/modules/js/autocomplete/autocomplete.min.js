/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.8.3
 */
!function(){"use strict";angular.module("material.components.autocomplete",["material.core","material.components.icon"])}(),function(){"use strict";function e(e,t,n,a,l){function i(){r(),o()}function o(){var e=angular.element(b.ul),t=angular.element(b.input),n=e.attr("id")||"ul_"+a.nextUid();e.attr("id",n),t.attr("aria-owns",n)}function c(e){if(e){var t={};return A.itemName&&(t[A.itemName]=e),t}}function r(){var t=parseInt(e.delay,10)||0;e.$watch("searchText",t?a.debounce(m,t):m),e.$watch("selectedItem",function(t,n){e.itemChange&&t!==n&&e.itemChange(c(t))})}function m(t,n){if(A.index=-1,!t||t.length<Math.max(parseInt(e.minLength,10),1))return A.loading=!1,A.matches=[],A.hidden=f(),u(),void 0;var a=t.toLowerCase();y&&y.cancel&&(y.cancel(),y=null),!e.noCache&&w[a]?(A.matches=w[a],u()):A.fetch(t),A.hidden=f(),e.textChange&&t!==n&&e.textChange(c(e.selectedItem))}function s(t){function a(n){w[i]=n,t===e.searchText&&(y=null,A.loading=!1,A.matches=n,A.hidden=f(),u())}var l=e.$parent.$eval(E),i=t.toLowerCase();angular.isArray(l)?a(l):(A.loading=!0,y=n.when(l).then(a))}function u(){if(!A.hidden)switch(A.matches.length){case 0:return A.messages.splice(0);case 1:return A.messages.push({display:"There is 1 match available."});default:return A.messages.push({display:"There are "+A.matches.length+" matches available."})}}function d(){A.messages.push({display:x()})}function p(){D||(A.hidden=!0)}function h(e){switch(e.keyCode){case l.KEY_CODE.DOWN_ARROW:if(A.loading)return;e.preventDefault(),A.index=Math.min(A.index+1,A.matches.length-1),v(),d();break;case l.KEY_CODE.UP_ARROW:if(A.loading)return;e.preventDefault(),A.index=Math.max(0,A.index-1),v(),d();break;case l.KEY_CODE.ENTER:if(A.loading||A.index<0)return;e.preventDefault(),$(A.index);break;case l.KEY_CODE.ESCAPE:A.matches=[],A.hidden=!0,A.index=-1;break;case l.KEY_CODE.TAB:}}function g(){e.searchText="",$(-1),b.input.focus()}function f(){return 1===A.matches.length&&e.searchText===C(A.matches[0])}function x(){return C(A.matches[A.index])}function C(t){return t&&e.itemText?e.itemText(c(t)):t}function $(t){e.selectedItem=A.matches[t],e.searchText=C(e.selectedItem)||e.searchText,A.hidden=!0,A.index=-1,A.matches=[]}function v(){var e=41*A.index,t=e+41,n=225.5;e<b.ul.scrollTop?b.ul.scrollTop=e:t>b.ul.scrollTop+n&&(b.ul.scrollTop=t-n)}var A=this,T=e.itemsExpr.split(/ in /i),E=T[1],b={main:t[0],ul:t[0].getElementsByTagName("ul")[0],input:t[0].getElementsByTagName("input")[0]},y=null,w={},D=!1;return A.scope=e,A.parent=e.$parent,A.itemName=T[0],A.matches=[],A.loading=!1,A.hidden=!0,A.index=0,A.keydown=h,A.blur=p,A.clear=g,A.select=$,A.getCurrentDisplayValue=x,A.fetch=a.debounce(s),A.messages=[],A.listEnter=function(){D=!0},A.listLeave=function(){D=!1},A.mouseUp=function(){b.input.focus()},i()}angular.module("material.components.autocomplete").controller("MdAutocompleteCtrl",e),e.$inject=["$scope","$element","$q","$mdUtil","$mdConstant"]}(),function(){"use strict";function e(){return{template:'        <md-autocomplete-wrap role="listbox">          <input type="text"              ng-disabled="isDisabled"              ng-model="searchText"              ng-keydown="$mdAutocompleteCtrl.keydown($event)"              ng-blur="$mdAutocompleteCtrl.blur()"              placeholder="{{placeholder}}"              aria-label="{{placeholder}}"              aria-autocomplete="list"              aria-haspopup="true"              aria-activedescendant=""              aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          <button              type="button"              ng-if="searchText"              ng-click="$mdAutocompleteCtrl.clear()">            <md-icon md-svg-icon="cancel"></md-icon>            <span class="visually-hidden">Clear</span>          </button>          <md-progress-linear              ng-if="$mdAutocompleteCtrl.loading"              md-mode="indeterminate"></md-progress-linear>        </md-autocomplete-wrap>        <ul role="presentation"            ng-mouseenter="$mdAutocompleteCtrl.listEnter()"            ng-mouseleave="$mdAutocompleteCtrl.listLeave()"            ng-mouseup="$mdAutocompleteCtrl.mouseUp()">          <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"              ng-class="{ selected: index === $mdAutocompleteCtrl.index }"              ng-show="searchText && !$mdAutocompleteCtrl.hidden"              ng-click="$mdAutocompleteCtrl.select(index)"              ng-transclude              md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">          </li>        </ul>        <aria-status            class="visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages">{{message.display}}</p>        </aria-status>',transclude:!0,controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",scope:{searchText:"=mdSearchText",selectedItem:"=mdSelectedItem",itemsExpr:"@mdItems",itemText:"&mdItemText",placeholder:"@placeholder",noCache:"=mdNoCache",itemChange:"&mdSelectedItemChange",textChange:"&mdSearchTextChange",isDisabled:"=ngDisabled",minLength:"=mdMinLength",delay:"=mdDelay"}}}angular.module("material.components.autocomplete").directive("mdAutocomplete",e)}(),function(){"use strict";function e(e,t,n){function a(e){return e?e.replace(/[\*\[\]\(\)\{\}\\\^\$]/g,"\\$&"):e}var l=t.attr("md-highlight-text"),i=n(t.text())(e),o=e.$watch(l,function(e){var n=new RegExp("^"+a(e),"i"),l=i.replace(n,'<span class="highlight">$&</span>');t.html(l)});t.on("$destroy",function(){o()})}angular.module("material.components.autocomplete").controller("MdHighlightCtrl",e),e.$inject=["$scope","$element","$interpolate"]}(),function(){"use strict";function e(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl"}}angular.module("material.components.autocomplete").directive("mdHighlightText",e)}(),function(){"use strict";function e(e,t){function n(n,a,l,i){var o=i.parent.$new(!1,i.parent),c=i.scope.$eval(l.mdAutocompleteListItem);o[c]=n.item,e(a.contents())(o),a.attr({role:"option",id:"item_"+t.nextUid()})}return{require:"^?mdAutocomplete",terminal:!0,link:n,scope:!1}}angular.module("material.components.autocomplete").directive("mdAutocompleteListItem",e),e.$inject=["$compile","$mdUtil"]}();