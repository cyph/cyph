/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.9.0
 */
!function(){"use strict";function e(e,t,n,o,l,a,i,m,u){function d(){g(),l(function(){f(),h(),p()})}function s(){function e(){var e=P.ul.getBoundingClientRect(),n={};e.right>o.right-c&&(n.left=t.right-e.width+"px"),P.$.ul.css(n)}if(!P)return l(s,0,!1);var t=P.wrap.getBoundingClientRect(),n=P.snap.getBoundingClientRect(),o=P.root.getBoundingClientRect(),a=n.bottom-o.top,i=o.bottom-n.top,m=t.left-o.left,u=t.width,d={left:m+"px",minWidth:u+"px",maxWidth:Math.max(t.right-o.left,o.right-t.left)-c+"px"};a>i&&o.height-t.bottom-c<r?(d.top="auto",d.bottom=i+"px",d.maxHeight=Math.min(r,t.top-o.top-c)+"px"):(d.top=a+"px",d.bottom="auto",d.maxHeight=Math.min(r,o.bottom-t.bottom-c)+"px"),P.$.ul.css(d),l(e,0,!1)}function p(){P.$.root.length&&(a(P.$.ul),P.$.ul.detach(),P.$.root.append(P.$.ul),m.pin&&m.pin(P.$.ul,u))}function h(){e.autofocus&&P.input.focus()}function g(){var t=parseInt(e.delay,10)||0;e.$watch("searchText",t?n.debounce(T,t):T),A(C),e.$watch("selectedItem",v),e.$watch("$mdAutocompleteCtrl.hidden",function(e,t){!e&&t&&s()}),angular.element(i).on("resize",s)}function f(){P={main:t[0],ul:t.find("ul")[0],input:t.find("input")[0],wrap:t.find("md-autocomplete-wrap")[0],root:document.body},P.li=P.ul.getElementsByTagName("li"),P.snap=$(),P.$=x(P)}function $(){for(var e=t;e.length;e=e.parent())if(angular.isDefined(e.attr("md-autocomplete-snap")))return e[0];return P.wrap}function x(e){var t={};for(var n in e)t[n]=angular.element(e[n]);return t}function C(t,n){t&&(e.searchText=L(t)),e.itemChange&&t!==n&&e.itemChange(D(t))}function v(e,t){for(var n=0;n<q.length;++n)q[n](e,t)}function A(e){-1==q.indexOf(e)&&q.push(e)}function b(e){var t=q.indexOf(e);-1!=t&&q.splice(t,1)}function T(t,n){j.index=k(),t!==n&&t!==L(e.selectedItem)&&(e.selectedItem=null,e.textChange&&t!==n&&e.textChange(D(e.selectedItem)),R()?B():(j.loading=!1,j.matches=[],j.hidden=O(),_()))}function w(){G=!1,V||(j.hidden=!0)}function E(){G=!0,angular.isString(e.searchText)||(e.searchText=""),e.minLength>0||(j.hidden=O(),j.hidden||B())}function y(e){switch(e.keyCode){case o.KEY_CODE.DOWN_ARROW:if(j.loading)return;e.preventDefault(),j.index=Math.min(j.index+1,j.matches.length-1),W(),H();break;case o.KEY_CODE.UP_ARROW:if(j.loading)return;e.preventDefault(),j.index=j.index<0?j.matches.length-1:Math.max(0,j.index-1),W(),H();break;case o.KEY_CODE.TAB:case o.KEY_CODE.ENTER:if(j.hidden||j.loading||j.index<0||j.matches.length<1)return;e.preventDefault(),N(j.index);break;case o.KEY_CODE.ESCAPE:j.matches=[],j.hidden=!0,j.index=k()}}function I(){return angular.isNumber(e.minLength)?e.minLength:1}function L(t){return t&&e.itemText?e.itemText(D(t)):t}function D(e){if(e){var t={};return j.itemName&&(t[j.itemName]=e),t}}function k(){return e.autoselect?0:-1}function O(){return R()?void 0:!0}function M(){return L(j.matches[j.index])}function R(){return e.searchText.length>=I()}function N(t){e.selectedItem=j.matches[t],e.searchText=L(e.selectedItem)||e.searchText,j.hidden=!0,j.index=0,j.matches=[]}function S(){e.searchText="",N(-1);var t=document.createEvent("CustomEvent");t.initCustomEvent("input",!0,!0,{value:e.searchText}),P.input.dispatchEvent(t),P.input.focus()}function U(t){function n(n){F[l]=n,j.loading=!1,t===e.searchText&&(z=null,j.matches=n,j.hidden=O(),_(),s())}var o=e.$parent.$eval(Y),l=t.toLowerCase();angular.isArray(o)?n(o):(j.loading=!0,o.success&&o.success(n),o.then&&o.then(n),o.error&&o.error(function(){j.loading=!1}))}function _(){if(!j.hidden)switch(j.matches.length){case 0:return j.messages.splice(0);case 1:return j.messages.push({display:"There is 1 match available."});default:return j.messages.push({display:"There are "+j.matches.length+" matches available."})}}function H(){j.messages.push({display:M()})}function W(){var e=P.li[j.index],t=e.offsetTop,n=t+e.offsetHeight,o=P.ul.clientHeight;t<P.ul.scrollTop?P.ul.scrollTop=t:n>P.ul.scrollTop+o&&(P.ul.scrollTop=n-o)}function B(){var t=e.searchText,n=t.toLowerCase();z&&z.cancel&&(z.cancel(),z=null),!e.noCache&&F[n]?(j.matches=F[n],_()):U(t),j.hidden=O()}var j=this,K=e.itemsExpr.split(/ in /i),Y=K[1],P=null,z=null,F={},V=!1,q=[],G=!1;return j.scope=e,j.parent=e.$parent,j.itemName=K[0],j.matches=[],j.loading=!1,j.hidden=!0,j.index=null,j.messages=[],j.id=n.nextUid(),j.keydown=y,j.blur=w,j.focus=E,j.clear=S,j.select=N,j.getCurrentDisplayValue=M,j.registerSelectedItemWatcher=A,j.unregisterSelectedItemWatcher=b,j.listEnter=function(){V=!0},j.listLeave=function(){V=!1,G||(j.hidden=!0)},j.mouseUp=function(){P.input.focus()},d()}function t(e,t){function n(n,o,l){l.$observe("disabled",function(e){n.isDisabled=e}),t.initOptionalProperties(n,l,{searchText:null,selectedItem:null}),e(o)}return{controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",link:n,scope:{name:"@",searchText:"=?mdSearchText",selectedItem:"=?mdSelectedItem",itemsExpr:"@mdItems",itemText:"&mdItemText",placeholder:"@placeholder",noCache:"=?mdNoCache",itemChange:"&?mdSelectedItemChange",textChange:"&?mdSearchTextChange",minLength:"=?mdMinLength",delay:"=?mdDelay",autofocus:"=?mdAutofocus",floatingLabel:"@?mdFloatingLabel",autoselect:"=?mdAutoselect",menuClass:"@?mdMenuClass"},template:function(e,t){function n(){var t=e.find("md-item-template").remove();return t.length?t.html():e.html()}function o(){var t=e.find("md-not-found").remove();return t.length?t.html():""}var l=n(),a=o();return'        <md-autocomplete-wrap role="listbox">          <md-input-container ng-if="floatingLabel">            <label>{{floatingLabel}}</label>            <input type="text"                id="fl-input-{{$mdAutocompleteCtrl.id}}"                name="{{name}}"                autocomplete="off"                ng-disabled="isDisabled"                ng-model="$mdAutocompleteCtrl.scope.searchText"                ng-keydown="$mdAutocompleteCtrl.keydown($event)"                ng-blur="$mdAutocompleteCtrl.blur()"                ng-focus="$mdAutocompleteCtrl.focus()"                aria-owns="ul-{{$mdAutocompleteCtrl.id}}"                aria-label="{{floatingLabel}}"                aria-autocomplete="list"                aria-haspopup="true"                aria-activedescendant=""                aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          </md-input-container>          <input type="text"              id="input-{{$mdAutocompleteCtrl.id}}"              name="{{name}}"              ng-if="!floatingLabel"              autocomplete="off"              ng-disabled="isDisabled"              ng-model="$mdAutocompleteCtrl.scope.searchText"              ng-keydown="$mdAutocompleteCtrl.keydown($event)"              ng-blur="$mdAutocompleteCtrl.blur()"              ng-focus="$mdAutocompleteCtrl.focus()"              placeholder="{{placeholder}}"              aria-owns="ul-{{$mdAutocompleteCtrl.id}}"              aria-label="{{placeholder}}"              aria-autocomplete="list"              aria-haspopup="true"              aria-activedescendant=""              aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          <button              type="button"              tabindex="-1"              ng-if="$mdAutocompleteCtrl.scope.searchText && !isDisabled"              ng-click="$mdAutocompleteCtrl.clear()">            <md-icon md-svg-icon="md-cancel"></md-icon>            <span class="md-visually-hidden">Clear</span>          </button>          <md-progress-linear              ng-if="$mdAutocompleteCtrl.loading"              md-mode="indeterminate"></md-progress-linear>          <ul role="presentation"              class="md-autocomplete-suggestions {{menuClass || \'\'}}"              id="ul-{{$mdAutocompleteCtrl.id}}"              ng-mouseenter="$mdAutocompleteCtrl.listEnter()"              ng-mouseleave="$mdAutocompleteCtrl.listLeave()"              ng-mouseup="$mdAutocompleteCtrl.mouseUp()">            <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"                ng-class="{ selected: index === $mdAutocompleteCtrl.index }"                ng-hide="$mdAutocompleteCtrl.hidden"                ng-click="$mdAutocompleteCtrl.select(index)"                md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">                '+l+"            </li>            "+function(){return a?'<li ng-if="!$mdAutocompleteCtrl.matches.length"                        ng-hide="$mdAutocompleteCtrl.hidden"                        md-autocomplete-parent-scope>'+a+"</li>":""}()+'          </ul>        </md-autocomplete-wrap>        <aria-status            class="md-visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages">{{message.display}}</p>        </aria-status>'}}}function n(e,t,n){function o(e){return e?e.replace(/[\\\^\$\*\+\?\.\(\)\|\{\}\[\]]/g,"\\$&"):e}function l(e,t){var n="";return t.indexOf("^")>=1&&(n+="^"),n+=e,t.indexOf("$")>=1&&(n+="$"),new RegExp(o(n),t.replace(/[\$\^]/g,""))}var a=t.attr("md-highlight-text"),i=n(t.text())(e),r=t.attr("md-highlight-flags")||"",c=e.$watch(a,function(e){var n=l(e,r),o=i.replace(n,'<span class="highlight">$&</span>');t.html(o)});t.on("$destroy",function(){c()})}function o(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl"}}function l(e,t){function n(n,o,l){var a=n.$parent.$mdAutocompleteCtrl,i=a.parent.$new(!1,a.parent),r=a.scope.$eval(l.mdAutocompleteListItem);i[r]=n.item,e(o.contents())(i),o.attr({role:"option",id:"item_"+t.nextUid()})}return{terminal:!0,link:n,scope:!1}}function a(e,t){function n(t,n,o){var l=t.$parent.$mdAutocompleteCtrl;e(n.contents())(l.parent)}return{restrict:"A",terminal:!0,link:n,scope:!1}}angular.module("material.components.autocomplete",["material.core","material.components.icon"]),angular.module("material.components.autocomplete").controller("MdAutocompleteCtrl",e);var i=41,r=5.5*i,c=8;e.$inject=["$scope","$element","$mdUtil","$mdConstant","$timeout","$mdTheming","$window","$animate","$rootElement"],angular.module("material.components.autocomplete").directive("mdAutocomplete",t),t.$inject=["$mdTheming","$mdUtil"],angular.module("material.components.autocomplete").controller("MdHighlightCtrl",n),n.$inject=["$scope","$element","$interpolate"],angular.module("material.components.autocomplete").directive("mdHighlightText",o),angular.module("material.components.autocomplete").directive("mdAutocompleteListItem",l),l.$inject=["$compile","$mdUtil"],angular.module("material.components.autocomplete").directive("mdAutocompleteParentScope",a),a.$inject=["$compile","$mdUtil"]}();