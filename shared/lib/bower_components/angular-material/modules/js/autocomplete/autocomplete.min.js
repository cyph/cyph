/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.8.2-master-7950588
 */
!function(){"use strict";angular.module("material.components.autocomplete",["material.core","material.components.icon"])}(),function(){"use strict";function e(e,t,n,a,l){function i(){r(),o()}function o(){var e=angular.element(y.ul),t=angular.element(y.input),n=e.attr("id")||"ul_"+a.nextUid();e.attr("id",n),t.attr("aria-owns",n)}function c(e){if(e){var t={};return T.itemName&&(t[T.itemName]=e),t}}function r(){var t=parseInt(e.delay,10)||0;e.$watch("searchText",t?a.debounce(s,t):s),e.$watch("selectedItem",function(t,n){e.itemChange&&t!==n&&e.itemChange(c(t))})}function s(t,n){if(T.index=-1,!t||t.length<Math.max(parseInt(e.minLength,10),1))return T.loading=!1,T.matches=[],T.hidden=f(),d(),void 0;var a=t.toLowerCase();E&&E.cancel&&(E.cancel(),E=null),!e.noCache&&w[a]?(T.matches=w[a],d()):T.fetch(t),T.hidden=f(),e.textChange&&t!==n&&e.textChange(c(e.selectedItem))}function m(t){function a(n){w[i]=n,t===e.searchText&&(E=null,T.loading=!1,T.matches=n,T.hidden=f(),d())}var l=e.$parent.$eval(b),i=t.toLowerCase();angular.isArray(l)?a(l):(T.loading=!0,E=n.when(l).then(a))}function d(){if(!T.hidden)switch(T.matches.length){case 0:return T.messages.splice(0);case 1:return T.messages.push({display:"There is 1 match available."});default:return T.messages.push({display:"There are "+T.matches.length+" matches available."})}}function u(){T.messages.push({display:x()})}function p(){T.hidden=!0}function h(e){switch(e.keyCode){case l.KEY_CODE.DOWN_ARROW:if(T.loading)return;e.preventDefault(),T.index=Math.min(T.index+1,T.matches.length-1),v(),u();break;case l.KEY_CODE.UP_ARROW:if(T.loading)return;e.preventDefault(),T.index=Math.max(0,T.index-1),v(),u();break;case l.KEY_CODE.ENTER:if(T.loading||T.index<0)return;e.preventDefault(),$(T.index);break;case l.KEY_CODE.ESCAPE:T.matches=[],T.hidden=!0,T.index=-1;break;case l.KEY_CODE.TAB:}}function g(){e.searchText="",$(-1),y.input.focus()}function f(){return 1===T.matches.length&&e.searchText===C(T.matches[0])}function x(){return C(T.matches[T.index])}function C(t){return t&&e.itemText?e.itemText(c(t)):t}function $(t){e.selectedItem=T.matches[t],e.searchText=C(e.selectedItem)||e.searchText,T.hidden=!0,T.index=-1,T.matches=[]}function v(){var e=41*T.index,t=e+41,n=225.5;e<y.ul.scrollTop?y.ul.scrollTop=e:t>y.ul.scrollTop+n&&(y.ul.scrollTop=t-n)}var T=this,A=e.itemsExpr.split(/ in /i),b=A[1],y={main:t[0],ul:t[0].getElementsByTagName("ul")[0],input:t[0].getElementsByTagName("input")[0]},E=null,w={};return T.scope=e,T.parent=e.$parent,T.itemName=A[0],T.matches=[],T.loading=!1,T.hidden=!0,T.index=0,T.keydown=h,T.blur=p,T.clear=g,T.select=$,T.getCurrentDisplayValue=x,T.fetch=a.debounce(m),T.messages=[],i()}angular.module("material.components.autocomplete").controller("MdAutocompleteCtrl",e),e.$inject=["$scope","$element","$q","$mdUtil","$mdConstant"]}(),function(){"use strict";function e(){return{template:'        <md-autocomplete-wrap role="listbox">          <input type="text"              ng-disabled="isDisabled"              ng-model="searchText"              ng-keydown="$mdAutocompleteCtrl.keydown($event)"              ng-blur="$mdAutocompleteCtrl.blur()"              placeholder="{{placeholder}}"              aria-label="{{placeholder}}"              aria-autocomplete="list"              aria-haspopup="true"              aria-activedescendant=""              aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          <button              type="button"              ng-if="searchText"              ng-click="$mdAutocompleteCtrl.clear()">            <md-icon md-svg-icon="cancel"></md-icon>            <span class="visually-hidden">Clear</span>          </button>          <md-progress-linear              ng-if="$mdAutocompleteCtrl.loading"              md-mode="indeterminate"></md-progress-linear>        </md-autocomplete-wrap>        <ul role="presentation">          <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"              ng-class="{ selected: index === $mdAutocompleteCtrl.index }"              ng-show="searchText && !$mdAutocompleteCtrl.hidden"              ng-click="$mdAutocompleteCtrl.select(index)"              ng-transclude              md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">          </li>        </ul>        <aria-status            class="visually-hidden"            role="status"            aria-live="assertive">          <p ng-repeat="message in $mdAutocompleteCtrl.messages">{{message.display}}</p>        </aria-status>',transclude:!0,controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",scope:{searchText:"=mdSearchText",selectedItem:"=mdSelectedItem",itemsExpr:"@mdItems",itemText:"&mdItemText",placeholder:"@placeholder",noCache:"=mdNoCache",itemChange:"&mdSelectedItemChange",textChange:"&mdSearchTextChange",isDisabled:"=ngDisabled",minLength:"=mdMinLength",delay:"=mdDelay"}}}angular.module("material.components.autocomplete").directive("mdAutocomplete",e)}(),function(){"use strict";function e(e,t,n){function a(e){return e?e.replace(/[\*\[\]\(\)\{\}\\\^\$]/g,"\\$&"):e}var l=t.attr("md-highlight-text"),i=n(t.text())(e),o=e.$watch(l,function(e){var n=new RegExp("^"+a(e),"i"),l=i.replace(n,'<span class="highlight">$&</span>');t.html(l)});t.on("$destroy",function(){o()})}angular.module("material.components.autocomplete").controller("MdHighlightCtrl",e),e.$inject=["$scope","$element","$interpolate"]}(),function(){"use strict";function e(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl"}}angular.module("material.components.autocomplete").directive("mdHighlightText",e)}(),function(){"use strict";function e(e,t){function n(n,a,l,i){var o=i.parent.$new(!1,i.parent),c=i.scope.$eval(l.mdAutocompleteListItem);o[c]=n.item,e(a.contents())(o),a.attr({role:"option",id:"item_"+t.nextUid()})}return{require:"^?mdAutocomplete",terminal:!0,link:n,scope:!1}}angular.module("material.components.autocomplete").directive("mdAutocompleteListItem",e),e.$inject=["$compile","$mdUtil"]}();