/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.9.0
 */
!function(){"use strict";!function(){function e(e,t){function n(t,n,i){e(n)}function i(e,n,i){var r=this;r.isErrorGetter=i.mdIsError&&t(i.mdIsError),r.delegateClick=function(){r.input.focus()},r.element=n,r.setFocused=function(e){n.toggleClass("md-input-focused",!!e)},r.setHasValue=function(e){n.toggleClass("md-input-has-value",!!e)},r.setInvalid=function(e){n.toggleClass("md-input-invalid",!!e)},e.$watch(function(){return r.label&&r.input},function(e){e&&!r.label.attr("for")&&r.label.attr("for",r.input.attr("id"))})}return i.$inject=["$scope","$element","$attrs"],{restrict:"E",link:n,controller:i}}function t(){return{restrict:"E",require:"^?mdInputContainer",link:function(e,t,n,i){i&&!n.mdNoFloat&&(i.label=t,e.$on("$destroy",function(){i.label=null}))}}}function n(e,t,n){function i(i,r,l,a){function o(e){return c.setHasValue(!d.$isEmpty(e)),e}function u(){c.setHasValue(r.val().length>0||(r[0].validity||{}).badInput)}function s(){function n(e){return s(),e}function l(){u.style.height="auto",u.scrollTop=0;var e=a();e&&(u.style.height=e+"px")}function a(){var e=u.scrollHeight-u.offsetHeight;return u.offsetHeight+(e>0?e:0)}function o(e){u.scrollTop=0;var t=u.scrollHeight-u.offsetHeight,n=u.offsetHeight+t;u.style.height=n+"px"}var u=r[0],s=e.debounce(l,1);d?(d.$formatters.push(n),d.$viewChangeListeners.push(n)):s(),r.on("keydown input",s),r.on("scroll",o),angular.element(t).on("resize",s),i.$on("$destroy",function(){angular.element(t).off("resize",s)})}var c=a[0],d=a[1]||e.fakeNgModel(),f=angular.isDefined(l.readonly);if(c){if(c.input)throw new Error("<md-input-container> can only have *one* <input> or <textarea> child element!");c.input=r,c.label||n.expect(r,"aria-label",r.attr("placeholder")),r.addClass("md-input"),r.attr("id")||r.attr("id","input_"+e.nextUid()),"textarea"===r[0].tagName.toLowerCase()&&s();var m=c.isErrorGetter||function(){return d.$invalid&&d.$touched};i.$watch(m,c.setInvalid),d.$parsers.push(o),d.$formatters.push(o),r.on("input",u),f||r.on("focus",function(e){c.setFocused(!0)}).on("blur",function(e){c.setFocused(!1),u()}),i.$on("$destroy",function(){c.setFocused(!1),c.setHasValue(!1),c.input=null})}}return{restrict:"E",require:["^?mdInputContainer","?ngModel"],link:i}}function i(e){function t(t,n,i,r){function l(e){return s.text((n.val()||e||"").length+"/"+a),e}var a,o=r[0],u=r[1],s=angular.element('<div class="md-char-counter">');i.$set("ngTrim","false"),u.element.append(s),o.$formatters.push(l),o.$viewChangeListeners.push(l),n.on("input keydown",function(){l()}),t.$watch(i.mdMaxlength,function(t){a=t,angular.isNumber(t)&&t>0?(s.parent().length||e.enter(s,u.element,angular.element(u.element[0].lastElementChild)),l()):e.leave(s)}),o.$validators["md-maxlength"]=function(e,t){return!angular.isNumber(a)||0>a?!0:(e||n.val()||t||"").length<=a}}return{restrict:"A",require:["ngModel","^mdInputContainer"],link:t}}function r(e){function t(t,i,r,l){if(l&&-1==n.indexOf(i[0].nodeName)&&!angular.isDefined(l.element.attr("md-no-float"))){var a=r.placeholder;if(i.removeAttr("placeholder"),0==l.element.find("label").length){var o='<label ng-click="delegateClick()">'+a+"</label>";l.element.addClass("md-icon-float"),l.element.prepend(o)}else e.warn("The placeholder='"+a+"' will be ignored since this md-input-container has a child label element.")}}var n=["MD-SELECT"];return{restrict:"A",require:"^^?mdInputContainer",priority:200,link:t}}angular.module("material.components.input",["material.core"]).directive("mdInputContainer",e).directive("label",t).directive("input",n).directive("textarea",n).directive("mdMaxlength",i).directive("placeholder",r),e.$inject=["$mdTheming","$parse"],n.$inject=["$mdUtil","$window","$mdAria"],i.$inject=["$animate"],r.$inject=["$log"]}()}();