{
	"root": true,
	"overrides": [
		{
			"files": ["*.html"],
			"extends": ["plugin:@angular-eslint/template/recommended"],
			"rules": {}
		},
		{
			"env": {
				"browser": true,
				"node": true
			},
			"extends": [
				"plugin:@angular-eslint/recommended",
				"plugin:@angular-eslint/template/process-inline-templates"
			],
			"files": ["*.ts"],
			"parser": "@typescript-eslint/parser",
			"parserOptions": {
				"project": "tsconfig.json",
				"sourceType": "module"
			},
			"plugins": [
				"@angular-eslint",
				"@typescript-eslint",
				"@typescript-eslint/tslint",
				"eslint-plugin-jsdoc",
				"eslint-plugin-security",
				"eslint-plugin-unicorn",
				"import",
				"no-null",
				"prefer-arrow",
				"rxjs",
				"rxjs-angular",
				"sonarjs",
				"unicorn"
			],
			"rules": {
				"@angular-eslint/component-selector": [
					"error",
					{"prefix": "cyph", "style": "kebab-case", "type": "element"}
				],
				"@angular-eslint/directive-selector": [
					"error",
					{
						"prefix": "cyph",
						"style": "camelCase",
						"type": "attribute"
					}
				],
				"@typescript-eslint/adjacent-overload-signatures": "error",
				"@typescript-eslint/array-type": "error",
				"@typescript-eslint/await-thenable": "error",
				"@typescript-eslint/ban-ts-comment": "error",
				"@typescript-eslint/ban-types": "error",
				"@typescript-eslint/consistent-type-assertions": [
					"error",
					{
						"assertionStyle": "angle-bracket",
						"objectLiteralTypeAssertions": "allow"
					}
				],
				"@typescript-eslint/consistent-type-definitions": "error",
				"@typescript-eslint/explicit-member-accessibility": [
					"error",
					{
						"accessibility": "explicit",
						"overrides": {"constructors": "off"}
					}
				],
				"@typescript-eslint/indent": "off",
				"@typescript-eslint/member-delimiter-style": [
					"error",
					{
						"multiline": {
							"delimiter": "semi",
							"requireLast": true
						},
						"singleline": {
							"delimiter": "semi",
							"requireLast": false
						}
					}
				],
				"@typescript-eslint/member-ordering": [
					"error",
					{
						"default": [
							"private-static-field",
							"protected-static-field",
							"public-static-field",
							"private-static-method",
							"protected-static-method",
							"public-static-method",
							"private-instance-field",
							"protected-instance-field",
							"public-instance-field",
							"private-instance-method",
							"protected-instance-method",
							"public-instance-method",
							"constructor"
						]
					}
				],
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "default",
						"format": ["camelCase", "UPPER_CASE"],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "enumMember",
						"format": ["camelCase", "PascalCase"]
					},
					{
						"selector": "interface",
						"format": ["PascalCase"],
						"prefix": ["I"]
					},
					{
						"selector": "typeLike",
						"format": ["PascalCase"]
					}
				],
				"@typescript-eslint/no-dynamic-delete": "error",
				"@typescript-eslint/no-empty-function": "off",
				"@typescript-eslint/no-empty-interface": "error",
				"@typescript-eslint/no-explicit-any": "off",
				"@typescript-eslint/no-extraneous-class": "off",
				"@typescript-eslint/no-floating-promises": "off",
				"@typescript-eslint/no-for-in-array": "error",
				"@typescript-eslint/no-inferrable-types": [
					"error",
					{"ignoreParameters": true, "ignoreProperties": true}
				],
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-namespace": "error",
				"@typescript-eslint/no-non-null-assertion": "error",
				"@typescript-eslint/no-parameter-properties": "off",
				"@typescript-eslint/no-redeclare": "error",
				"@typescript-eslint/no-require-imports": "error",
				"@typescript-eslint/no-shadow": "off",
				"@typescript-eslint/no-this-alias": "error",
				"@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
				"@typescript-eslint/no-unnecessary-qualifier": "error",
				"@typescript-eslint/no-unnecessary-type-arguments": "error",
				"@typescript-eslint/no-unnecessary-type-assertion": "error",
				"@typescript-eslint/no-use-before-declare": "off",
				"@typescript-eslint/no-var-requires": "error",
				"@typescript-eslint/prefer-for-of": "error",
				"@typescript-eslint/prefer-function-type": "error",
				"@typescript-eslint/prefer-namespace-keyword": "error",
				"@typescript-eslint/prefer-optional-chain": "off",
				"@typescript-eslint/prefer-readonly": "error",
				"@typescript-eslint/promise-function-async": "error",
				"@typescript-eslint/quotes": [
					"error",
					"single",
					{"avoidEscape": true}
				],
				"@typescript-eslint/require-await": "off",
				"@typescript-eslint/restrict-plus-operands": "error",
				"@typescript-eslint/semi": "off",
				"@typescript-eslint/space-within-parens": "off",
				"@typescript-eslint/strict-boolean-expressions": "off",
				"@typescript-eslint/triple-slash-reference": "error",
				"@typescript-eslint/type-annotation-spacing": "off",
				"@typescript-eslint/unbound-method": "error",
				"@typescript-eslint/unified-signatures": "error",
				"arrow-body-style": "off",
				"arrow-parens": ["error", "as-needed"],
				"brace-style": "off",
				"camelcase": "off",
				"capitalized-comments": "off",
				"class-methods-use-this": "off",
				"complexity": "error",
				"constructor-super": "error",
				"curly": "error",
				"default-case": "off",
				"dot-notation": "error",
				"eol-last": "error",
				"eqeqeq": ["error", "always"],
				"guard-for-in": "error",
				"id-blacklist": [
					"error",
					"any",
					"Number",
					"number",
					"String",
					"string",
					"Boolean",
					"boolean",
					"Undefined"
				],
				"id-match": "error",
				"import/no-default-export": "error",
				"import/no-deprecated": "error",
				"import/no-extraneous-dependencies": "error",
				"import/no-internal-modules": "off",
				"import/no-unassigned-import": "error",
				"import/order": "error",
				"jsdoc/check-alignment": "error",
				"jsdoc/check-indentation": "off",
				"jsdoc/newline-after-description": "off",
				"jsdoc/no-types": "off",
				"linebreak-style": ["error", "unix"],
				"max-classes-per-file": ["error", 1],
				"max-len": "off",
				"max-lines": ["error", 500],
				"new-parens": "error",
				"newline-per-chained-call": "off",
				"no-bitwise": "error",
				"no-caller": "error",
				"no-cond-assign": "error",
				"no-console": [
					"error",
					{
						"allow": [
							"warn",
							"dir",
							"time",
							"timeEnd",
							"timeLog",
							"trace",
							"assert",
							"clear",
							"count",
							"countReset",
							"group",
							"groupEnd",
							"table",
							"debug",
							"info",
							"dirxml",
							"groupCollapsed",
							"Console",
							"profile",
							"profileEnd",
							"timeStamp",
							"context"
						]
					}
				],
				"no-constant-condition": "off",
				"no-debugger": "error",
				"no-duplicate-case": "error",
				"no-duplicate-imports": "error",
				"no-empty": "off",
				"no-eval": "error",
				"no-extra-bind": "error",
				"no-extra-semi": "error",
				"no-fallthrough": "error",
				"no-invalid-regexp": "error",
				"no-invalid-this": "error",
				"no-irregular-whitespace": "error",
				"no-magic-numbers": "off",
				"no-multiple-empty-lines": ["error", {"max": 2}],
				"no-new-func": "error",
				"no-new-wrappers": "error",
				"no-null/no-null": "error",
				"no-octal": "error",
				"no-octal-escape": "error",
				"no-param-reassign": "off",
				"no-plusplus": "off",
				"no-redeclare": "off",
				"no-restricted-syntax": ["error", "ForInStatement"],
				"no-return-await": "error",
				"no-sequences": "error",
				"no-shadow": "off",
				"no-sparse-arrays": "error",
				"no-template-curly-in-string": "error",
				"no-throw-literal": "error",
				"no-trailing-spaces": "error",
				"no-undef-init": "error",
				"no-underscore-dangle": "off",
				"no-unsafe-finally": "error",
				"no-unused-expressions": "error",
				"no-unused-labels": "error",
				"no-useless-constructor": "off",
				"no-var": "error",
				"no-void": "error",
				"no-with": "error",
				"object-shorthand": "error",
				"one-var": ["error", "never"],
				"padded-blocks": [
					"error",
					{"blocks": "never"},
					{"allowSingleLineBlocks": true}
				],
				"padding-line-between-statements": "off",
				"prefer-arrow/prefer-arrow-functions": "error",
				"prefer-const": "error",
				"prefer-object-spread": "error",
				"prefer-template": "off",
				"quote-props": ["error", "consistent-as-needed"],
				"radix": "error",
				"rxjs-angular/prefer-async-pipe": "off",
				"rxjs-angular/prefer-composition": "off",
				"rxjs-angular/prefer-takeuntil": "off",
				"rxjs/ban-observables": "off",
				"rxjs/ban-operators": "off",
				"rxjs/finnish": "off",
				"rxjs/just": "off",
				"rxjs/no-async-subscribe": "off",
				"rxjs/no-compat": "error",
				"rxjs/no-connectable": "error",
				"rxjs/no-create": "error",
				"rxjs/no-cyclic-action": "error",
				"rxjs/no-explicit-generics": "off",
				"rxjs/no-exposed-subjects": "off",
				"rxjs/no-finnish": "error",
				"rxjs/no-ignored-error": "off",
				"rxjs/no-ignored-notifier": "error",
				"rxjs/no-ignored-observable": "error",
				"rxjs/no-ignored-replay-buffer": "error",
				"rxjs/no-ignored-subscribe": "error",
				"rxjs/no-ignored-subscription": "error",
				"rxjs/no-ignored-takewhile-value": "error",
				"rxjs/no-implicit-any-catch": "error",
				"rxjs/no-index": "error",
				"rxjs/no-internal": "error",
				"rxjs/no-nested-subscribe": "error",
				"rxjs/no-redundant-notify": "error",
				"rxjs/no-sharereplay": "error",
				"rxjs/no-subclass": "error",
				"rxjs/no-subject-unsubscribe": "error",
				"rxjs/no-subject-value": "off",
				"rxjs/no-subscribe-handlers": "off",
				"rxjs/no-topromise": "error",
				"rxjs/no-unbound-methods": "error",
				"rxjs/no-unsafe-catch": "error",
				"rxjs/no-unsafe-first": "error",
				"rxjs/no-unsafe-subject-next": "error",
				"rxjs/no-unsafe-switchmap": "error",
				"rxjs/no-unsafe-takeuntil": "error",
				"rxjs/prefer-observer": "error",
				"rxjs/suffix-subjects": "off",
				"rxjs/throw-error": "off",
				"security/detect-possible-timing-attacks": "error",
				"sonarjs/no-collapsible-if": "error",
				"space-before-function-paren": ["error", "always"],
				"spaced-comment": "off",
				"unicorn/filename-case": "off",
				"unicorn/prefer-switch": ["error", {"minimumCases": 4}],
				"unicorn/prefer-ternary": "off",
				"use-isnan": "error",
				"valid-typeof": "off",
				"yoda": "error",
				"@typescript-eslint/tslint/config": [
					"error",
					{
						"rules": {
							"ban": [
								true,
								{
									"name": "combineLatest",
									"message": "Use util.observableAll"
								},
								[
									"crypto",
									"getRandomValues",
									"Prefer potassiumUtil.randomBytes"
								],
								[
									"crypto",
									"randomBytes",
									"Prefer potassiumUtil.randomBytes"
								],
								["Date", "now", "Prefer util.timestamp"],
								[
									"JSON",
									"parse",
									"Prefer util.deserialize (typed/validated), util.dynamicDeserialize (dynamic), or util.parse (for JSON interop)"
								],
								{
									"name": "fetch",
									"message": "Use util.request"
								},
								[
									"JSON",
									"stringify",
									"Prefer util.serialize (typed/validated), util.dynamicSerialize (dynamic), or util.stringify (for JSON interop)"
								],
								[
									"localStorage",
									"getItem",
									"Use LocalStorageService"
								],
								[
									"localStorage",
									"removeItem",
									"Use LocalStorageService"
								],
								[
									"localStorage",
									"setItem",
									"Use LocalStorageService"
								],
								["Math", "random", "Seriously?"],
								["Number", "parseInt", "Use util.toInt"],
								{
									"name": "parseInt",
									"message": "Use util.toInt"
								},
								["window", "open", "Use util.openWindow"],
								{
									"name": "open",
									"message": "Use util.openWindow"
								},
								"setInterval",
								"setTimeout",
								{
									"name": "XMLHttpRequest",
									"message": "Use util.request"
								}
							],
							"comment-type": [
								true,
								"directive",
								"doc",
								"multiline"
							],
							"completed-docs": [
								true,
								{
									"classes": {
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										},
										"visibilities": ["exported"]
									},
									"enums": {
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										},
										"visibilities": ["exported"]
									},
									"functions": {
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										},
										"visibilities": ["exported"]
									},
									"interfaces": {
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										},
										"visibilities": ["exported"]
									},
									"methods": {
										"privacies": ["protected", "public"],
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										}
									},
									"namespaces": {
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										},
										"visibilities": ["exported"]
									},
									"properties": {
										"privacies": ["protected", "public"],
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										}
									},
									"types": {
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										},
										"visibilities": ["exported"]
									},
									"variables": {
										"tags": {
											"existence": [
												"ignore",
												"inheritDoc",
												"see"
											]
										},
										"visibilities": ["exported"]
									}
								}
							],
							"const-parameters": true,
							"early-exit": true,
							"encoding": true,
							"insecure-random": true,
							"invalid-void": true,
							"no-accessor-recursion": true,
							"no-as-type-assertion": true,
							"no-disable-auto-sanitization": true,
							"no-inferred-empty-object-type": true,
							"no-inner-html": true,
							"no-mergeable-namespace": true,
							"no-promise-as-boolean": true,
							"no-restricted-globals": [
								true,
								"event",
								"length",
								"name"
							],
							"no-static-this": true,
							"no-string-based-set-immediate": true,
							"no-string-based-set-interval": true,
							"no-string-based-set-timeout": true,
							"no-tautology-expression": true,
							"no-unnecessary-callback-wrapper": true,
							"no-unnecessary-else": true,
							"no-unnecessary-local-variable": true,
							"no-unnecessary-override": true,
							"no-var-before-return": true,
							"number-literal-format": true,
							"object-literal-sort-keys": true,
							"parameter-properties": [
								true,
								"member-access",
								"trailing"
							],
							"prefer-const-enum": true,
							"prefer-type-cast": true,
							"prefer-while": true,
							"promise-must-complete": true,
							"static-this": true,
							"strict-comparisons": [
								true,
								{
									"allow-object-equal-comparison": true,
									"allow-string-order-comparison": true
								}
							],
							"strict-string-expressions": true,
							"strict-type-predicates": true,
							"switch-final-break": true,
							"typedef": [
								true,
								"call-signature",
								"parameter",
								"property-declaration"
							],
							"unnecessary-else": true,
							"use-named-parameter": true
						},
						"rulesDirectory": [
							"/node_modules/tslint-consistent-codestyle/rules",
							"/node_modules/tslint-microsoft-contrib"
						]
					}
				]
			}
		}
	]
}
